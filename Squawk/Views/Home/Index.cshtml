@model IEnumerable<Squawk.Models.HistSample>


@{
    ViewBag.Title = "Chat";
}

<h2>Chat</h2>

<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>System Monitoring</h2>
        <canvas id="header-canvas1" width="640" height="480" style="background-color:#660066"></canvas>
        <canvas id="header-canvas2" width="640" height="480" style="background-color:#5FBFDF"></canvas>
    </div>
</div>

<div id="legend"></div>


@section scripts {

    <script src="~/Scripts/Chart.js"></script>
    <script src="~/Scripts/Chart.Scatter.js"></script>

    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>



    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var chat = $.connection.chatHub;
            
            chat.client.addNewMessageToPage = function (name, message) {
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            chat.client.asyncMessageReceiver = function (name, message) {
                $('#discussion').append('<li> async received </li>');
            };

            $('#displayname').val(prompt('Enter your name:', ''));
            
            $('#message').focus();

            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    chat.server.send($('#displayname').val(), $('#message').val());
                    $('#message').val('').focus();
                });
            });
        });

        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        var data = [];

        var mydata =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                       Model,
                       new Newtonsoft.Json.JsonSerializerSettings
        {
                           ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore,
                           Formatting = Newtonsoft.Json.Formatting.Indented
        }
        ));



        for (var key in mydata)
        {
            if (mydata.hasOwnProperty(key))
            {
                data.push({
                    x: Date.parse(mydata[key].dtSample) + 24 * 3600000,
                    y: mydata[key].dbValue
                });
            }
        }


        var ctx1 = document.getElementById("header-canvas1").getContext("2d");
        var myChart1 = new Chart(ctx1).Scatter([{ label: "dataset 1", data: data }], {
            showScale: true,
            scaleShowLabels: true,
            scaleShowHorizontalLines: true,
            scaleShowVerticalLines: false,
            scaleLineWidth: 1,
            scaleLineColor: "red",
            scaleGridLineColor: "#999",
            scaleLabel: "<%=value%>°C",
            scaleDateFormat: "mm/yyyy",
            scaleTimeFormat: "HH:MM",
            scaleDateTimeFormat: "HH:MM",
            scaleGridLineWidth: 1,
            useUtc: true,
            pointDot: false,
            scaleType: 'date',
            animation: false,

            scaleOverride: true,
            scaleSteps: 4,
            scaleStepWidth: 50,
            scaleStartValue: 0
        });

        var ctx2 = document.getElementById("header-canvas2").getContext("2d");
        var myChart2 = new Chart(ctx2).Scatter([{ label: "dataset 1", data: data }], {
            showScale: true,
            scaleShowLabels: true,
            scaleShowHorizontalLines: true,
            scaleShowVerticalLines: false,
            scaleLineWidth: 1,
            scaleLineColor: "red",
            scaleGridLineColor: "#999",
            scaleLabel: "<%=value%>°C",
            scaleDateFormat: "mm/yyyy",
            scaleTimeFormat: "HH:MM",
            scaleDateTimeFormat: "HH:MM",
            scaleGridLineWidth: 1,
            useUtc: true,
            pointDot: false,
            scaleType: 'date',
            animation: false,

            scaleOverride: true,
            scaleSteps: 4,
            scaleStepWidth: 50,
            scaleStartValue: 0
        });

        document.getElementById("legend").innerHTML = myChart.generateLegend();

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}


