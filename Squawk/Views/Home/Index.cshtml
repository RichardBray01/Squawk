@model IEnumerable<Squawk.Models.HistSample>


@{
    ViewBag.Title = "Chat";
}

<h2>Chat</h2>

<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

<div class="row">
    <div class="col-md-12">
        <h2>System Monitoring</h2>
        <canvas id="header-canvas1" width="800" height="200" ></canvas>
        <canvas id="header-canvas2" width="800" height="200" ></canvas>
    </div>
</div>

<div id="legend"></div>


@section scripts {

    <script src="~/Scripts/Chart.js"></script>
    <script src="~/Scripts/Chart.Scatter.js"></script>

    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>



    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var chat = $.connection.chatHub;
            
            chat.client.addNewMessageToPage = function (name, message) {
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            chat.client.asyncMessageReceiver = function (bigobj) {
                
                var dataArray = [];

                for (var key in bigobj)
                {
                    if (bigobj.hasOwnProperty(key))
                    {
                        dataArray.push({
                            x: Date.parse(bigobj[key].dtSample) + 24 * 3600000,
                            y: bigobj[key].dbValue
                        });
                    }
                }

                var ctx1 = document.getElementById("header-canvas1").getContext("2d");
                var myChart1 = new Chart(ctx1).Scatter([{ label: "dataset 1", data: dataArray }], {
                    showScale: true,
                    scaleShowLabels: true,
                    scaleShowHorizontalLines: true,
                    scaleShowVerticalLines: false,
                    scaleLineWidth: 1,
                    scaleLineColor: "darkgray",
                    scaleGridLineColor: "lightblue",
                    scaleLabel: "<%=value%>°C",
                    scaleDateFormat: "mm/yyyy",
                    scaleTimeFormat: "HH:MM",
                    scaleDateTimeFormat: "HH:MM",
                    scaleGridLineWidth: 1,
                    useUtc: true,
                    pointDot: false,
                    scaleType: 'date',
                    animation: false,

                    scaleOverride: true,
                    scaleSteps: 4,
                    scaleStepWidth: 50,
                    scaleStartValue: 0
                });



                var ctx2 = document.getElementById("header-canvas2").getContext("2d");
                var myChart2 = new Chart(ctx2).Scatter([{ label: "dataset 1", data: dataArray }], {
                    showScale: true,
                    scaleShowLabels: true,
                    scaleShowHorizontalLines: true,
                    scaleShowVerticalLines: false,
                    scaleLineWidth: 1,
                    scaleLineColor: "red",
                    scaleGridLineColor: "#999",
                    scaleLabel: "<%=value%>°C",
                    scaleDateFormat: "mm/yyyy",
                    scaleTimeFormat: "HH:MM",
                    scaleDateTimeFormat: "HH:MM",
                    scaleGridLineWidth: 1,
                    useUtc: true,
                    pointDot: false,
                    scaleType: 'date',
                    animation: false,

                    scaleOverride: true,
                    scaleSteps: 4,
                    scaleStepWidth: 50,
                    scaleStartValue: 0
                });
            };

            $('#displayname').val(prompt('Enter your name:', ''));
            
            $('#message').focus();

            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    chat.server.send($('#displayname').val(), $('#message').val());
                    $('#message').val('').focus();
                });
            });
        });

    
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}


